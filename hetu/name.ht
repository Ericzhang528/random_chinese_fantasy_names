import '../data/name/family.json' as family
import '../data/name/female.json' as female
import '../data/name/male.json' as male
import '../data/name/middle.json' as middle
import '../data/dao/dao.json' as dao
import '../data/dao/title_male.json' as daoTitleFemale
import '../data/dao/title_female.json' as daoTitleMale
import '../data/skill/skill.jsonc' as skill
import '../data/skill/prefix.json' as skillPrefix
import '../data/skill/kind.json' as skillKind
import '../data/skill/postfix.json' as skillPostfix
import '../data/book/def.json' as bookDef
import '../data/book/epic_kind.json' as bookEpicKind

final rarityLevels = {
  common: 1.0, // common 灰
  uncommon: 0.35, // uncommon 白
  rare: 0.15, // rare 蓝
  epic: 0.075, // epic 紫
  legendary: 0.025, // legendary 橙
  mythic: 0.01, // mythic 金
  exotic: 0.005, // exotic 虹
}

fun getRarity() {
  var rarity
  final value = Math.random()
  if (value < rarityLevels.exotic) {
    rarity = 'exotic'
  } else if (value < rarityLevels.mythic) {
    rarity = 'mythic'
  } else if (value < rarityLevels.legendary) {
    rarity = 'legendary'
  } else if (value < rarityLevels.epic) {
    rarity = 'epic'
  } else if (value < rarityLevels.rare) {
    rarity = 'rare'
  } else if (value < rarityLevels.uncommon) {
    rarity = 'uncommon'
  } else {
    rarity = 'common'
  }
  return { rarity, value }
}

fun getName(number, {isFemale, style}) {
  final names = []
  for (var i = 0; i < number; ++i) {
    final familyIndex = Math.randomInt(family.length + 1) % family.length
    final familyName = family[familyIndex]
    var f = isFemale ?? Math.randomInt(10) % 2 == 0
    final namesOfASex = f ? female : male
    final r = Math.random()
    var name = ''
    if (style == 'single' || r < 0.33333333) {
      final nameIndex = Math.randomInt(namesOfASex.length + 1) % namesOfASex.length
      name = namesOfASex[nameIndex]
    } else if (style == 'double' || r < 0.66666666) {
      final nameIndex1 = Math.randomInt(namesOfASex.length + 1) % namesOfASex.length
      final nameIndex2 = Math.randomInt(namesOfASex.length + 1) % namesOfASex.length
      name = '${namesOfASex[nameIndex1]}${namesOfASex[nameIndex2]}'
    } else {
      final nameIndex1 = Math.randomInt(middle.length + 1) % middle.length
      final nameIndex2 = Math.randomInt(namesOfASex.length + 1) % namesOfASex.length
      name = '${middle[nameIndex1]}${namesOfASex[nameIndex2]}'
    }
    names.add('${familyName}${name}')
  }
  return names
}

fun getDao(number, {isFemale, rarity}) {
  final names = []
  for (var i = 0; i < number; ++i) {
    final nameIndex1 = Math.randomInt(dao.length + 1) % dao.length
    final nameIndex2 = Math.randomInt(dao.length + 1) % dao.length
    final name = '${dao[nameIndex1]}${dao[nameIndex2]}'
    var titleGroup = isFemale ?? Math.randomInt(10) % 2 == 0 ? daoTitleFemale : daoTitleMale
    var title = ''
    var r = rarity ?? getRarity().rarity
    if (r == 'exotic') {
      title = titleGroup.exotic[Math.randomInt(titleGroup.exotic.length)]
    } else if (r == 'mythic') {
      title = titleGroup.mythic[Math.randomInt(titleGroup.mythic.length)]
    } else if (r == 'legendary') {
      title = titleGroup.legendary[Math.randomInt(titleGroup.legendary.length)]
    } else if (r == 'epic') {
      title = titleGroup.epic[Math.randomInt(titleGroup.epic.length)]
    } else if (r == 'rare') {
      title = titleGroup.rare[Math.randomInt(titleGroup.rare.length)]
    } else if (r == 'uncommon') {
      title = titleGroup.uncommon[Math.randomInt(titleGroup.uncommon.length)]
    }
    names.add('${name}${title}')
  }
  return names
}

const _kNumberEndSupplement = '式'

fun _getSkillName({kind, length}) {
  var l = length
  if (!l) {
    var rarity = getRarity().value
    if (rarity < rarityLevels.rare) {
      l = 3
    } else if (rarity < rarityLevels.common) {
      l = 2
    } else {
      l = 1
    }
  }
  var name = ''
  for (var i = 0; i < l; ++i) {
    name += skill[Math.randomInt(skill.length)]
  }
  var end = kind ?? skillKind[Math.randomInt(skillKind.length)]
  if (getRarity().value < rarityLevels.epic) {
    final prefix = skillPrefix[Math.randomInt(skillPrefix.length)]
    name = '${prefix}${name}'
  }
  if (getRarity().value < rarityLevels.epic) {
    final postfix = skillPostfix[Math.randomInt(skillPostfix.length)]
    if (end.length > 1) {
      name = '${name}${end}${postfix}${_kNumberEndSupplement}'
    } else {
      name = '${name}${postfix}${end}'
    }
  } else {
      name = '${name}${end}'
  }
  return name
}

fun getSkill(number, {kind, length}) {
  assert(!length || length > 0)
  final names = []
  for (var i = 0; i < number; ++i) {
    final name = _getSkillName(kind: kind, length: length)
    names.add(name)
  }
  return names
}

fun getBook(number, {kind, length, rarity}) {
  assert(!length || length > 0)
  final names = []
  for (var i = 0; i < number; ++i) {
    var name = ''
    final skillname = _getSkillName(kind: kind, length: length)
    var r = rarity ?? getRarity().rarity
    if (r == 'exotic') {
      final prefix = bookDef.exotic[Math.randomInt(bookDef.exotic.length)]
      final kind = bookEpicKind[Math.randomInt(bookEpicKind.length)]
      name = '${skillname}${prefix}${kind}'
    } else if (r == 'mythic') {
      final prefix = bookDef.mythic[Math.randomInt(bookDef.mythic.length)]
      final kind = bookEpicKind[Math.randomInt(bookEpicKind.length)]
      name = '${skillname}${prefix}${kind}'
    } else if (r == 'legendary') {
      final prefix = bookDef.legendary[Math.randomInt(bookDef.legendary.length)]
      final kind = bookEpicKind[Math.randomInt(bookEpicKind.length)]
      name = '${skillname}${prefix}${kind}'
    } else if (r == 'epic') {
      final prefix = bookDef.epic[Math.randomInt(bookDef.epic.length)]
      final kind = bookEpicKind[Math.randomInt(bookEpicKind.length)]
      name = '${skillname}${prefix}${kind}'
    } else if (r == 'rare') {
      name = skillname
    } else if (r == 'uncommon') {
      final isBroken = Math.random() < rarityLevels.uncommon
      if (isBroken) {
        final postfix = bookDef.uncommon[Math.randomInt(bookDef.uncommon.length)]
        name = '${skillname}（${postfix}）'
      } else {
        name = skillname
      }
    } else if (r == 'common') {
      final isBroken = Math.random() < rarityLevels.common
      if (isBroken) {
        final postfix = bookDef.common[Math.randomInt(bookDef.common.length)]
        name = '${skillname}（${postfix}）'
      } else {
        name = skillname
      }
    }
    names.add('《${name}》')
  }
  return names
}